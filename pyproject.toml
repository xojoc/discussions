[tool.poetry]
name = "discussions"
version = "0.1.0"
description = ""
authors = ["Alexandru Cojocaru <hi@xojoc.pw>"]


[tool.poetry.dependencies]
archiveis = "^0"
bs4 = "^0"
CacheControl = "^0"
celery = "^5"
cleanurl = "*"
crawlerdetect = "*"
crispy-bootstrap5 = "*"
daphne = "^4"
Django = "^4"
django-allauth = "^0"
django-celery-beat = "^2"
django-celerybeat-status = "^0"
django-crispy-forms = "*"
django-debug-toolbar = "*"
django-extensions = "^3"
django-htmx = "^1"
django-ninja = "^0"
django-stubs-ext = "*"
django-redis = "^5"
feedparser = "^6"
flower = "^2"
gevent = "^23"
igraph = "^0"
# importlib-metadata = "*"
lxml = "^4"
Markdown = "^3"
matplotlib = "^3"
minify-html = "^0"
networkx = "*"
nltk = "^3"
praw = "^7"
psycopg2-binary = "^2"
python = "^3.11"
python-dateutil = "^2"
requests = "^2"
scipy = "*"
sentry-sdk = "^1"
stripe = "*"
tweepy = "^4"
urllib3 = "^2"
whitenoise = "^6"
zstandard = "*"
django-sass = "^1"

[tool.poetry.dev-dependencies]
celery-types = "*"
mypy = "*"
django-stubs = { extras = ["compatible-mypy"], version = "*" }
ipython = "*"


[tool.poetry.group.types.dependencies]
types-markdown = "^3"
types-requests = "^2"
types-stripe = "*"
types-lxml = "*"
types-urllib3 = "^1"
types-python-dateutil = "^2"


[tool.poetry.group.dev.dependencies]
debugpy = "^1.8.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.mypy]
plugins = ["mypy_django_plugin.main"]

[tool.django-stubs]
django_settings_module = "discussions.settings"

[tool.ruff]
select = ['ALL']
ignore = [
	# 'E501',
	'ERA001', # commented out code
	'ANN101', # missing self annotation 
	'ANN102', # missing class annotation
	'D',      # ignore docs for now
	#   'D100', 'D101', 'D102', 'D103', # missing doc strings
	#   'G004', # Logging statement uses f-string --> reenable
	#       'FBT', #  disable  boolean checks
	#	  'BLE001', # fixme: blind Exception
	'TD002',   # todo wants author
	'FIX002',  # warns about todo presence
	'TD003',   # missing issue
	'PT009',   # pytest
	'PLR2004', # magic value in comparison
	'PLR0916', # too many boolean expressions
	# 'RUF012', # mutable class attribute
	# 'PTH123', # Path.open instead of open
	'SIM102', # use single if

	# re-enable later 
	'G004',    # logger use f-string
	'E501',    # line too long
	'C901',    # too complex
	'PLR0912', # too many branches
	'PLR0915', # too many statements
	'PLR0913', # too many arguments to function
	'PLR0911', # too many return statements
	'ANN401',  # Any not allowed in arguments
	'E203',    # whitespace before :
]
unfixable = [
	'F841', # unused variable
	'B007', # unused loop control variable
]
preview = true
line-length = 79
target-version = 'py311'
extend-exclude = ['web/migrations']

[tool.ruff.extend-per-file-ignores]
'./manage.py' = ['ALL']
"__init__.py" = ["CPY001", "D104"]
"test_*.py" = [
	'ANN',     # annotations
	'D',       # documentation warnings
	'PLR2004', # magic value 
	'PLR6301', # self not used 
	'S101',    # asserts 
	'SLF001',  # private method accessed 
	'S106',    # possible hardcoded password
]

[tool.ruff.flake8-annotations]
ignore-fully-untyped = true

[tool.ruff.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.isort]
combine-as-imports = true
[tool.ruff.pydocstyle]
convention = 'google'

[tool.black]
line-length = 79

[tool.pyright]
typeCheckingMode = 'basic'
reportUnnecessaryIsInstance = 'warning'
reportUnnecessaryCast = 'warning'
reportUnnecessaryComparison = 'warning'
reportUnnecessaryContains = 'warning'
reportImplicitStringConcatenation = false
reportUnusedCallResult = 'warning'
reportUnusedExpression = 'warning'
reportUnnecessaryTypeIgnoreComment = 'warning'
reportMatchNotExhaustive = 'warning'
reportImplicitOverride = 'warning'
reportShadowedImports = 'warning'
reportPropertyTypeMismatch = 'warning'
reportFunctionMemberAccess = 'warning'
reportImportCycles = 'warning'
reportUnusedImport = false
reportUnusedClass = false
reportUnusedFunction = false
reportUnusedVariable = false
reportDuplicateImport = 'warning'
reportPrivateUsage = 'warning'
reportConstantRedefinition = 'warning'
reportDeprecated = 'warning'
reportIncompatibleMethodOverride = false
reportIncompatibleVariableOverride = false
reportInconsistentConstructor = 'warning'
reportOverlappingOverload = 'warning'
reportMissingSuperCall = 'warning'
reportUninitializedInstanceVariable = 'warning'
